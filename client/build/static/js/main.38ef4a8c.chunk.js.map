{"version":3,"sources":["components/NavTabs.js","components/Container.js","components/Row.js","components/Col.js","components/Card.js","utils/API.js","components/List/index.js","components/DeleteBtn/index.js","components/BookSearchResults.js","components/pages/Saved.js","components/SearchForm.js","components/BookDetail.js","components/BookSearchContainer.js","components/pages/Search.js","App.js","registerServiceWorker.js","index.js"],"names":["NavTabs","react_default","a","createElement","className","react_router_dom","to","window","location","pathname","Container","props","children","Row","Col","size","split","map","join","Card","heading","API","search","query","axios","get","concat","getBooks","deleteBook","id","delete","saveBook","bookData","post","List","_ref","ListItem","_ref2","DeleteBtn","Object","assign","role","tabIndex","BookSearchResults","state","result","books","viewMongoDbData","then","res","_this","setState","data","catch","err","console","log","this","_this2","components_Container","components_Row","components_Col","components_Card","book","key","_id","href","googleBookListing","target","title","author","publishedDate","components_DeleteBtn","onClick","Component","Saved","components_BookSearchResults","SearchForm","htmlFor","onChange","handleInputChange","value","name","type","placeholder","handleFormSubmit","BookDetail","results","volumeInfo","authors","publisher","industryIdentifiers","identifier","canonicalVolumeLink","onClickAction","BookSearchContainer","searchBooks","handleAddSubmit","isbnLong","event","defineProperty","preventDefault","components_BookDetail","items","components_SearchForm","Search","components_BookSearchContainer","App","components_NavTabs","react_router","exact","path","component","isLocalhost","Boolean","hostname","match","registerValidSW","swUrl","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","error","ReactDOM","render","src_App","document","getElementById","URL","process","origin","addEventListener","fetch","response","status","headers","indexOf","ready","unregister","reload","checkValidServiceWorker","registerServiceWorker"],"mappings":"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","file":"static/js/main.38ef4a8c.chunk.js","sourcesContent":["import React from \"react\";\nimport { Link } from \"react-router-dom\";\n\nfunction NavTabs() {\n  return (\n    <ul className=\"nav nav-tabs\">\n      <li className=\"nav-item\">\n        <Link to=\"/search\" className={window.location.pathname === \"/\" ? \"nav-link active\" : \"nav-link\"}>\n          Search\n        </Link>\n      </li>\n      <li className=\"nav-item\">\n        <Link\n          to=\"/saved\"\n          className={window.location.pathname === \"/saved\" ? \"nav-link active\" : \"nav-link\"}\n        >\n          Saved\n        </Link>\n      </li>\n    </ul>\n  );\n}\n\nexport default NavTabs;\n","import React from \"react\";\r\n\r\nfunction Container(props) {\r\n    return <div className='container'>{props.children}</div>;\r\n}\r\n\r\nexport default Container;","import React from \"react\";\n\nfunction Row(props) {\n  return <div className='row'>{props.children}</div>;\n}\n\nexport default Row;\n","import React from \"react\";\n\n// This Col component offers us the convenience of being able to set a column's \"size\" prop instead of its className\n// We can also omit the col- at the start of each Bootstrap column class, e.g. size=\"md-12\" instead of className=\"col-md-12\"\n\nfunction Col(props) {\n  const size = props.size.split(\" \").map(size => \"col-\" + size).join(\" \");\n\n  return (\n    <div className={size}>\n      {props.children}\n    </div>\n  );\n}\n\nexport default Col;\n","import React from \"react\";\n\nfunction Card(props) {\n  return (\n    <div className=\"card text-center\">\n      <div className=\"card-header\">\n        <h2>{props.heading}</h2>\n      </div>\n      <div className=\"card-body\">{props.children}</div>\n    </div>\n  );\n}\n\nexport default Card;\n","import axios from \"axios\";\nconst BASEURL = \"https://www.googleapis.com/books/v1/volumes?q=\";\nconst AUTHORSEARCH = \"inauthor:\"\nconst ORDERING = \"&orderBy=newest\"\nconst MAXRESULTS = \"&maxResults=40\"\nconst APIKEY = \"&key=AIzaSyBvrAqrUn3DQqWapuse08m421Df1ZU5ZcU\";\n\nexport default {\n  search: function(query) {\n    return axios.get(`${BASEURL}${AUTHORSEARCH}${query}${ORDERING}${MAXRESULTS}${APIKEY}`);\n  },\n  // Gets all books\n  getBooks: function() {\n  return axios.get(\"/api/books\");\n  },\n  // Deletes the book with the given id\n  deleteBook: function(id) {\n    return axios.delete(\"/api/books/\" + id);\n  },\n  // Saves a book to the database\n  saveBook: function(bookData) {\n  return axios.post(\"/api/books\", bookData);\n}\n};\n","import React from \"react\";\nimport \"./style.css\";\n\n// This file exports both the List and ListItem components\n\nexport function List({ children }) {\n  return (\n    <div className=\"list-overflow-container\">\n      <ul className=\"list-group\">{children}</ul>\n    </div>\n  );\n}\n\nexport function ListItem({ children }) {\n  return <li className=\"list-group-item\">{children}</li>;\n}\n","import React from \"react\";\nimport \"./style.css\";\n\n// The ...props means, spread all of the passed props onto this element\n// That way we don't have to define them all individually\nfunction DeleteBtn(props) {\n  return (\n    <span className=\"delete-btn\" {...props} role=\"button\" tabIndex=\"0\">\n      ✗\n    </span>\n  );\n}\n\nexport default DeleteBtn;\n","import React, { Component } from \"react\";\nimport Container from \"./Container\";\nimport Row from \"./Row\";\nimport Col from \"./Col\";\nimport Card from \"./Card\";\nimport API from \"../utils/API\";\nimport {List, ListItem} from \"./List\";\nimport DeleteBtn from \"./DeleteBtn\";\n\nclass BookSearchResults extends Component {\n  state = {\n    result: \"\",\n    search: \"\",\n    books: []\n  };\n\n  // When this component mounts, console log what's currently in the MongoDatabase \n  componentDidMount() {\n    this.viewMongoDbData()\n  };\n\n  viewMongoDbData = () => {\n    API.getBooks()\n      .then(res => this.setState({ books: res.data }))\n      .catch(err => console.log(err));\n  };\n  \n   // Deletes a book from the database with a given id, then reloads books from the db\n  deleteBook = id => {\n    API.deleteBook(id)\n      .then(res => this.viewMongoDbData())\n      .catch(err => console.log(err));\n  };\n\n  render() {\n    return (\n      <Container>\n        <Row>\n          <Col size=\"md-8\">\n            <Card heading=\"Results\">\n            <List>\n                {this.state.books.map(book => (\n                  <ListItem key={book._id}>\n                    <a href={book.googleBookListing} target=\"blank\">\n                      <strong>\n                        {book.title} by {book.author}\n                      </strong>\n                    </a>\n                    <p>Publish Date: {book.publishedDate}</p>\n                    <DeleteBtn onClick={() => this.deleteBook(book._id)} />\n                  </ListItem>\n                ))}\n              </List>\n            </Card>\n          </Col>\n        </Row>\n      </Container>\n    );\n  }\n}\n\nexport default BookSearchResults;\n","import React from \"react\";\nimport BookSearchResults from \"../BookSearchResults\"\n\nfunction Saved() {\n  return (<div>\n  <BookSearchResults />;\n  </div>)\n}\n\nexport default Saved;\n","import React from \"react\";\n\nfunction SearchForm(props) {\n  return (\n    <form>\n      <div className=\"form-group\">\n        <label htmlFor=\"search\">Search:</label>\n        <input\n          onChange={props.handleInputChange}\n          value={props.value}\n          name=\"search\"\n          type=\"text\"\n          className=\"form-control\"\n          placeholder=\"Search For an Author\"\n          id=\"search\"\n        />\n        <br />\n        <button onClick={props.handleFormSubmit} className=\"btn btn-primary\">\n          Search\n        </button>\n      </div>\n    </form>\n  );\n}\n\nexport default SearchForm;\n","import React from \"react\";\n\nfunction BookDetail(props) {\n  return (\n    <div className=\"text-center\">\n      {props.results.map(result => (\n        <div key ={result.id}>\n          <h3>Title: {result.volumeInfo.title}</h3>\n          <h3>Author: {result.volumeInfo.authors}</h3>\n          <h3>Publisher: {result.volumeInfo.publisher}</h3>\n          <h3>Published Date: {result.volumeInfo.publishedDate}</h3>\n          <h3>ISBN: {(result.volumeInfo.industryIdentifiers[1] == null) ? 'undefined' : result.volumeInfo.industryIdentifiers[1].identifier}</h3>\n          <h3><a href={result.volumeInfo.canonicalVolumeLink} target =\"blank\">More Info</a></h3>\n          <span \n            onClick={()=> {props.onClickAction(result.volumeInfo)}}\n            className=\"btn btn-secondary\"\n            role=\"button\"\n            tabIndex=\"0\">\n            SAVE ME\n          </span>\n          <hr />\n        </div>\n      ))}\n    </div>\n  );\n}\n\nexport default BookDetail;","import React, { Component } from \"react\";\nimport Container from \"./Container\";\nimport Row from \"./Row\";\nimport Col from \"./Col\";\nimport Card from \"./Card\";\nimport SearchForm from \"./SearchForm\";\nimport BookDetail from \"./BookDetail\";\nimport API from \"../utils/API\";\nimport {List, ListItem} from \"./List\";\nimport DeleteBtn from \"./DeleteBtn\";\n\nclass BookSearchContainer extends Component {\n  state = {\n    result: \"\",\n    search: \"\",\n    books: []\n  };\n\n  // When this component mounts, console log what's currently in the MongoDatabase \n  // and populate example search with author Dav Pilkey \n  componentDidMount() {\n    this.viewMongoDbData()\n    // this.searchBooks(\"Dav+Pilkey\");\n  };\n\n  viewMongoDbData = () => {\n    API.getBooks()\n      .then(res => this.setState({ books: res.data }))\n      .catch(err => console.log(err));\n  };\n\n  searchBooks = query => {\n    API.search(query)\n      .then(res => this.setState({ result: res.data }))\n      .catch(err => console.log(err));\n  };\n  \n   // Deletes a book from the database with a given id, then reloads books from the db\n   deleteBook = id => {\n    API.deleteBook(id)\n      .then(res => this.viewMongoDbData())\n      .catch(err => console.log(err));\n  };\n\n  handleAddSubmit = volumeInfo => {\n      API.saveBook({\n        title: volumeInfo.title,\n        author: volumeInfo.authors[0],\n        publisher: volumeInfo.publisher,\n        publishedDate: volumeInfo.publishedDate,\n        isbnLong: (volumeInfo.industryIdentifiers[1] == null) ? 'undefined' : volumeInfo.industryIdentifiers[1].identifier,\n        googleBookListing: volumeInfo.canonicalVolumeLink\n    })\n    .then(res => this.viewMongoDbData())\n    .catch(err => console.log(err));\n    // console.log(volumeInfo)\n  };\n\n  handleInputChange = event => {\n    const value = event.target.value;\n    const name = event.target.name;\n    this.setState({\n      [name]: value\n    });\n  };\n\n  // When the form is submitted, search the Google Books API for the value of `this.state.search`\n  handleFormSubmit = event => {\n    event.preventDefault();\n    this.searchBooks(this.state.search);\n  };\n\n  render() {\n    return (\n      <Container>\n        <Row>\n          <Col size=\"md-8\">\n            <Card\n              heading={\"PubDate Planner\"}\n            >\n              {this.state.result ? (\n                <BookDetail \n                results={this.state.result.items} \n                onClickAction={this.handleAddSubmit}\n                />\n              ) : (\n                <h3>No Results to Display</h3>\n              )}\n            </Card>\n          </Col>\n          <Col size=\"md-4\">\n            <Card heading=\"Search\">\n              <SearchForm\n                value={this.state.search}\n                handleInputChange={this.handleInputChange}\n                handleFormSubmit={this.handleFormSubmit}\n              />\n            </Card>\n            <Card heading=\"Results\">\n            <List>\n                {this.state.books.map(book => (\n                  <ListItem key={book._id}>\n                    <a href={book.googleBookListing} target=\"blank\">\n                      <strong>\n                        {book.title} by {book.author}\n                      </strong>\n                    </a>\n                    <p>Publish Date: {book.publishedDate}</p>\n                    <DeleteBtn onClick={() => this.deleteBook(book._id)} />\n                  </ListItem>\n                ))}\n              </List>\n            </Card>\n          </Col>\n        </Row>\n      </Container>\n    );\n  }\n}\n\nexport default BookSearchContainer;\n","import React from \"react\";\nimport BookSearchContainer from \"../BookSearchContainer\"\n\nfunction Search() {\n  return <BookSearchContainer />;\n}\n\nexport default Search;\n","import React from \"react\";\nimport \"./App.css\";\n\nimport { BrowserRouter as Router, Route } from \"react-router-dom\";\nimport NavTabs from \"./components/NavTabs\";\nimport Saved from \"./components/pages/Saved\";\nimport Search from \"./components/pages/Search\";\n\nfunction App() {\n  return (\n    <Router>\n      <div>\n        <NavTabs />\n        <Route exact path=\"/\" component={Search} />\n        <Route exact path=\"/search\" component={Search} />\n        <Route exact path=\"/saved\" component={Saved} />\n      </div>\n    </Router>\n  );\n}\n\nexport default App;\n","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === \"localhost\" ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === \"[::1]\" ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport default function register() {\n  if (process.env.NODE_ENV === \"production\" && \"serviceWorker\" in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener(\"load\", () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (!isLocalhost) {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl);\n      } else {\n        // This is running on localhost. Lets check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === \"installed\") {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log(\"New content is available; please refresh.\");\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log(\"Content is cached for offline use.\");\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error(\"Error during service worker registration:\", error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get(\"content-type\").indexOf(\"javascript\") === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl);\n      }\n    })\n    .catch(() => {\n      console.log(\n        \"No internet connection found. App is running in offline mode.\"\n      );\n    });\n}\n\nexport function unregister() {\n  if (\"serviceWorker\" in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport registerServiceWorker from \"./registerServiceWorker\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\nregisterServiceWorker();\n"],"sourceRoot":""}